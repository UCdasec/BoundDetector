{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>This site contains the docs for ripkit. This are very new and likelylacking great (sorry). These will hopefully improve overtime. </p>"},{"location":"#table-of-contents","title":"Table of Contents","text":"<ol> <li>CLI_Reference</li> <li>Cargo_cli</li> <li>ripbin_cli</li> <li>ghidra_cli</li> <li>ida_cli</li> <li>profile_cli</li> <li>modify_cli</li> </ol>"},{"location":"cargo_cli/","title":"Cargo cli","text":""},{"location":"cargo_cli/#cargo","title":"Cargo","text":"<p>The cargo subcommand provides actions that pertain to pulling  cargo crates to the local db and db management. </p>"},{"location":"cargo_cli/#commands","title":"Commands:","text":"<ol> <li>clear-cloned<ul> <li>Delete all the locally cloned crates</li> </ul> </li> <li>clone<ul> <li>Clone a specific crate name to the local db</li> </ul> </li> <li>clone-many-exe<ul> <li>Clone many crates that have executables </li> </ul> </li> <li>init <ul> <li>Init the local crates_io</li> </ul> </li> <li>is-crate-exe<ul> <li>See if a remote crate produces an executable</li> </ul> </li> <li>list-cloned <ul> <li>Lis the locally cloned crates</li> </ul> </li> <li>show-cratesio <ul> <li>TODO</li> </ul> </li> </ol>"},{"location":"cargo_cli/#important-paths","title":"Important Paths","text":"<pre><code># Structure:\n# $HOME/.crates_io\n# |- cloned_crates\n#    |- crate1\n#    |- crate2\n#    |- crate3\nPath(\"~/.crates_io/\").expanduser()\n</code></pre>"},{"location":"cli_reference/","title":"Cli reference","text":"<p>This page will serve as the main reference guide to the CLI usage.  This page will not provide environment setup or install.</p>"},{"location":"cli_reference/#overview","title":"Overview","text":"<p>Running ripkit Currenlty ripkit does not have a true release yet. Therefore to run ripkit  run the command: <pre><code>python ripkit/main.py [COMMAND] [OPTIONS]\n</code></pre></p> <p>Ripkit is divided logically into subcommands. Each subcommand may  have a few or many of it's own commands. Currently the main  subcommands are:</p> <ol> <li>cargo<ul> <li>Interact with a local Rust Crate database</li> <li>cargo_cli</li> </ul> </li> <li>ripbin<ul> <li>Complile Rust crates and save to / interact with db </li> <li>ripbin_cli</li> </ul> </li> <li>ghidra<ul> <li>Use ghidra to recover function boundaries</li> <li>ghidra_cli</li> </ul> </li> <li>ida<ul> <li>Use IDA Pro to recover function boudnaries</li> <li>ida_cli</li> </ul> </li> <li>profile<ul> <li>Profile datasets for patterns in prologues and epilogues</li> <li>profile_cli</li> </ul> </li> <li>modify<ul> <li>Modify sets of binaries to 'trick' models</li> <li>modify_cli</li> </ul> </li> </ol> <p>And the main command will have some of it's own runnable command</p>"},{"location":"ripbin_cli/","title":"Ripbin cli","text":""},{"location":"ripbin_cli/#ripbin","title":"Ripbin","text":""},{"location":"ripbin_cli/#overview","title":"Overview:","text":"<p>The ripbin subcommand is not intuative initially. This subcommand is provides actions to: 1. Build crates found in the local crates io</p>"},{"location":"ripbin_cli/#commands","title":"Commands:","text":""}]}